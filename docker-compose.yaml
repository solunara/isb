version: "3"

services:
  # Redis 7.2
  redis:
    image: docker.io/bitnami/redis:7.2
    container_name: redis7.2
    command: redis-server --appendonly yes # 启动Redis并开启AOF持久化
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"
  # MySQL 8.0
  mysql8:
    image: mysql:8.0.29
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./script/:/docker-entrypoint-initdb.d/
    ports:
      - "13316:3306"
  # MongoDB
  mongo:
    image: mongo:6.0
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017
  # etcd, remote config
  # etcdctl --endpoints=127.0.0.1:12379 put /isb "$(<config.yaml)"
  # etcdctl --endpoints=127.0.0.1:12379 get /isb
  etcd:
    image: bitnami/etcd:3.5.18
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
    ports:
      - "12379:2379"
    # kafka
  kafka:
    image: bitname/kafka:3.6.0
    environment:
      - KAFKA_CFG_NODE_ID=0
      # 允许自动创建没有的topic,线上不要开启
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      # docker内部使用9092端口连接，docker外部使用9094端口连接
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://:9093,EXTERNAL://0.0.0.0:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    ports:
      - "9092:9092"
      - "9094:9094"
